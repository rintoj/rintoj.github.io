var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=3>c?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(3>c?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){return"object"==typeof Reflect&&"function"==typeof Reflect.metadata?Reflect.metadata(k,v):void 0},__extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)};System.register("header/header.component",["angular2/core"],function(exports_1){"use strict";var core_1,HeaderComponent;return{setters:[function(core_1_1){core_1=core_1_1}],execute:function(){HeaderComponent=function(){function HeaderComponent(){this.title="Pathway",this.selectedProject="--select project--",this.showDropdown=!1,this.showMenu=!1,this.projects=["Mobile in web","Angular 2","TCS SwaS","dreamUP","TCS data Tootle"]}return HeaderComponent.prototype.toggleDropdown=function(){this.showDropdown=!this.showDropdown},HeaderComponent.prototype.toggleMenu=function(){this.showMenu=!this.showMenu},HeaderComponent.prototype.selectProject=function(event){this.selectedProject=event.target.innerText},HeaderComponent=__decorate([core_1.Component({selector:"pw-header"}),core_1.View({template:'\n		<div class="nav-wrapper" [class.open]="showMenu">\n			<a class="title">\n				<img src="images/logo.svg" width="48">\n				<span href="#">{{title}}</span>\n			</a>\n\n			<span class="right visible-sm">\n				<i class="fa fa-bars" (click)="toggleMenu()"></i>\n			</span>\n\n			<span class="menu right visible-lg" [class.open]="showMenu">\n				<span class="dropdown inline" (click)="toggleDropdown()" [class.open]="showDropdown">\n					<button class="dropdown-btn">\n						<i class="fa fa-home"></i> {{selectedProject}} <i class="fa fa-chevron-down"></i>\n					</button>\n					<div class="dropdown-menu">\n						<button class="dropdown-item" type="button"  *ngFor="#project of projects"\n						 (click)="selectProject($event)"><i class="fa fa-home"></i> {{project}}</button>\n					   <div class="dropdown-divider"></div>\n						 <button class="dropdown-item" type="button"><i class="fa fa-plus"></i> Create</button>\n					</div>\n				</span>\n\n				<span class="icons">\n					<a class="fa fa-user"></a>\n					<a class="fa fa-bell" badge="10"></a>\n					<a class="fa fa-cog"></a>\n				</span>\n			</span>\n\n    </div>\n	'}),__metadata("design:paramtypes",[])],HeaderComponent)}(),exports_1("HeaderComponent",HeaderComponent)}}}),System.register("projectlog/projectlog",[],function(exports_2){"use strict";return{setters:[],execute:function(){}}}),System.register("loader/loader.component",["angular2/core"],function(exports_3){"use strict";var core_2,LoaderComponent;return{setters:[function(core_2_1){core_2=core_2_1}],execute:function(){LoaderComponent=function(){function LoaderComponent(){}return LoaderComponent=__decorate([core_2.Component({selector:"pw-loader"}),core_2.View({template:'\n		<div class="sk-circle">\n			<div class="sk-circle1 sk-child"></div>\n			<div class="sk-circle2 sk-child"></div>\n			<div class="sk-circle3 sk-child"></div>\n			<div class="sk-circle4 sk-child"></div>\n			<div class="sk-circle5 sk-child"></div>\n			<div class="sk-circle6 sk-child"></div>\n			<div class="sk-circle7 sk-child"></div>\n			<div class="sk-circle8 sk-child"></div>\n			<div class="sk-circle9 sk-child"></div>\n			<div class="sk-circle10 sk-child"></div>\n			<div class="sk-circle11 sk-child"></div>\n			<div class="sk-circle12 sk-child"></div>\n		</div>\n	'}),__metadata("design:paramtypes",[])],LoaderComponent)}(),exports_3("LoaderComponent",LoaderComponent)}}}),System.register("projectlog/projectlog.component",["angular2/core","loader/loader.component"],function(exports_4){"use strict";var core_3,loader_component_1,ProjectlogComponent;return{setters:[function(core_3_1){core_3=core_3_1},function(loader_component_1_1){loader_component_1=loader_component_1_1}],execute:function(){ProjectlogComponent=function(){function ProjectlogComponent(){this.selectAllOn=!1,this.loading=!1,this.logs=[{id:"02332",selected:!1,title:"User must be able to login to system as engineer",description:"The navigation drawer on the right is a live demo of a temporary navigation drawer.",status:"new"},{id:"02333",selected:!1,title:"User must be able to logout from the system",description:"The navigation drawer on the right is a live demo of a temporary navigation drawer. Temporary navigation drawers can toggle open or closed. Closed by default, the drawer opens temporarily above all other content until a section is selected. Temporary navigation drawers can toggle open or closed. Closed by default, the drawer opens temporarily above all other content until a section is selected. Temporary navigation drawers can toggle open or closed. Closed by default, the drawer opens temporarily above all other content until a section is selected. Temporary navigation drawers can toggle open or closed. Closed by default, the drawer opens temporarily above all other content until a section is selected. Temporary navigation drawers can toggle open or closed. Closed by default, the drawer opens temporarily",status:"new"},{id:"02334",selected:!1,title:"User must be able to see login page when trying to relogin after logout",description:"The navigation drawer on the right is a live demo of a temporary navigation drawer. Temporary navigation drawers can toggle open or closed. Closed by default, the drawer opens temporarily above all other content until a section is selected. Temporary navigation drawers can toggle open or closed. Closed by default, the drawer opens temporarily above all other content until a section is selected. Temporary navigation drawers can toggle open or closed. Closed by default, the drawer opens temporarily above all other content until a section is selected. Temporary navigation drawers can toggle open or closed. Closed by default, the drawer opens temporarily above all other content until a section is selected. Temporary navigation drawers can toggle open or closed. Closed by default, the drawer opens temporarily above all other content until a section is selected.",status:"done"},{id:"02334",selected:!1,title:"User must be able to see login page when trying to relogin after logout",description:"The navigation drawer on the right is a live demo of a temporary navigation drawer. Temporary navigation drawers can toggle open or closed. Closed by default, the drawer opens temporarily Temporary navigation drawers can toggle open or closed. Closed by default, the drawer opens temporarily above all other content until a section is selected. Temporary navigation drawers can toggle open or closed. Closed by default, the drawer opens temporarily above all other content until a section is selected. Temporary navigation drawers can toggle open or closed. Closed by default, the drawer opens temporarily above all other content until a section is selected. Temporary navigation drawers can toggle open or closed. Closed by default, the drawer opens temporarily above all other content until a section is selected. Temporary navigation drawers can toggle open or closed. Closed by default, the drawer opens temporarily above all other content until a section is selected. Temporary navigation drawers can toggle open or closed. Closed by default, the drawer opens temporarily above all other content until a section is selected. Temporary navigation drawers can toggle open or closed. Closed by default, the drawer opens temporarily above all other content until a section is selected. Temporary navigation drawers can toggle open or closed. Closed by default, the drawer opens temporarily above all other content until a section is selected. Temporary navigation drawers can toggle open or closed. Closed by default, the drawer opens temporarily above all other content until a section is selected. Temporary navigation drawers can toggle open or closed. Closed by default, the drawer opens temporarily above all other content until a section is selected. Temporary navigation drawers can toggle open or closed. Closed by default, the drawer opens temporarily above all other content until a section is selected.",status:"done"},{id:"02334",selected:!1,title:"User must be able to see login page when trying to relogin after logout",description:"The navigation drawer on the right is a live demo of a temporary navigation drawer. Temporary navigation drawers can toggle open or closed. Closed by default, the drawer opens temporarily above all other content until a section is selected. Temporary navigation drawers can toggle open or closed. Closed by default, the drawer opens temporarily above all other content until a section is selected. Temporary navigation drawers can toggle open or closed. Closed by default, the drawer opens temporarily above all other content until a section is selected. Temporary navigation drawers can toggle open or closed. Closed by default, the drawer opens temporarily above all other content until a section is selected. Temporary navigation drawers can toggle open or closed. Closed by default, the drawer opens temporarily above all other content until a section is selected. Temporary navigation drawers can toggle open or closed. Closed by default, the drawer opens temporarily above all other content until a section is selected.",status:"doing"},{id:"02334",selected:!1,title:"A user must be able to see login page when trying to relogin after logout",description:"The navigation drawer on the right is a live demo of a temporary navigation drawer. Temporary navigation drawers can toggle open or closed. Closed by default, the drawer opens temporarily above all other content until a section is selected. Temporary navigation drawers can toggle open or closed. Closed by default, the drawer opens temporarily above all other content until a section is selected. Temporary navigation drawers can toggle open or closed. Closed by default, the drawer opens temporarily above all other content until a section is selected. Temporary navigation drawers can toggle open or closed. Closed by default, the drawer opens temporarily above all other content until a section is selected.",status:"doing"}]}return ProjectlogComponent.prototype.toggleAll=function(){this.selectAllOn=!this.selectAllOn;for(var _i=0,_a=this.logs;_i<_a.length;_i++){var item=_a[_i];item.selected=this.selectAllOn}},ProjectlogComponent.prototype.toggleSelection=function(item,event){event.stopPropagation(),item.selected=!item.selected,this.updateSelectAllToggle()},ProjectlogComponent.prototype.toggleCurrent=function(current){current.open=!current.open,this.currentItem&&current!==this.currentItem&&(this.currentItem.open=!1),this.currentItem=current,this.updateSelectAllToggle()},ProjectlogComponent.prototype.updateSelectAllToggle=function(){for(var _i=0,_a=this.logs;_i<_a.length;_i++){var item=_a[_i];if(item.selected===!1)return void(this.selectAllOn=!1)}this.selectAllOn=!0},ProjectlogComponent.prototype.deleteSelected=function(){this.logs=this.logs.filter(function(item){return item.selected===!1})},ProjectlogComponent=__decorate([core_3.Component({selector:"pw-projectlog"}),core_3.View({directives:[loader_component_1.LoaderComponent],template:'\n\n		<!-- action buttons -->\n		<div class="actions">\n			<a class="fa fa-plus" tooltip="Add story"></a>\n			<a class="fa fa-trash" tooltip="Delete stories" (click)="deleteSelected()"></a>\n			<a class="fa fa-check" tooltip="Toggle selection" (click)="toggleAll()" [class.selected]="selectAllOn"></a>\n			<a class="fa fa-refresh" tooltip="Toggle spinner" (click)="loading=!loading"></a>\n		</div>\n\n		<div class="separator"></div>\n\n		<!-- the list -->\n		<div class="list" [class.loading]="loading">\n\n			<!-- the list item-->\n			<div class="list-item" *ngFor="#item of logs" [class.selected-item]="item.selected" [class.open]="item.open"\n			 (click)="toggleCurrent(item)">\n				<div class="avatar fa" (click)="toggleSelection(item, $event)">{{item.title.substr(0, 1).toUpperCase()}}</div>\n				<div class="content">\n					<div class="heading-row">\n						<div class="id">{{item.id}}</div>\n						<div class="heading">{{item.title}}</div>\n					</div>\n					<div class="text">\n					<div class="status" [class.grey-text]="item.status===\'done\'" [class.green-text]="item.status===\'doing\'"\n					 [class.yellow-text]="item.status===\'new\'">{{item.status}}</div>\n\n					{{item.description}}</div>\n				</div>\n				<div class="action-bar">\n					<a class="fa fa-edit"></a>\n					<a class="fa fa-trash"></a>\n				</div>\n			</div> <!-- end of list item -->\n\n			<!-- list loader -->\n			<div class="list-item loader">\n				<pw-loader></pw-loader>\n			</div>\n\n		</div> <!-- end of list -->\n	'}),__metadata("design:paramtypes",[])],ProjectlogComponent)}(),exports_4("ProjectlogComponent",ProjectlogComponent)}}}),System.register("about/about.component",["angular2/core"],function(exports_5){"use strict";var core_4,AboutComponent;return{setters:[function(core_4_1){core_4=core_4_1}],execute:function(){AboutComponent=function(){function AboutComponent(){var filtered;filtered=_.filter([0,1,2,3],function(number){return number%2===0}),console.log("filtered",filtered)}return AboutComponent=__decorate([core_4.Component({selector:"about"}),core_4.View({template:'\n   <h2>Angular 2 - Seed Project</h2>\n   <p>Light-weight and easy to use seed project for Angular 2 apps.</p>\n   <p>\n     <a href="https://travis-ci.org/ghpabs/angular2-seed-project"><img src="https://travis-ci.org/ghpabs/angular2-seed-project.svg?branch=master" alt="Build Status"></a>\n     <a href="https://gitter.im/ghpabs/angular2-seed-project"><img src="https://badges.gitter.im/Join%20Chat.svg" alt="Join the chat at https://gitter.im/ghpabs/angular2-seed-project"></a>\n   </p>\n   <p><img src="images/angular2-seed-logo.png" width="250px"></p>\n   <br>\n\n   <a class="btn btn-primary-outline" href="https://github.com/ghpabs/angular2-seed">GitHub</a>\n	'}),__metadata("design:paramtypes",[])],AboutComponent)}(),exports_5("AboutComponent",AboutComponent)}}}),System.register("app",["angular2/core","angular2/router","header/header.component","projectlog/projectlog.component","about/about.component"],function(exports_6){"use strict";var core_5,router_1,header_component_1,projectlog_component_1,about_component_1,AppComponent;return{setters:[function(core_5_1){core_5=core_5_1},function(router_1_1){router_1=router_1_1},function(header_component_1_1){header_component_1=header_component_1_1},function(projectlog_component_1_1){projectlog_component_1=projectlog_component_1_1},function(about_component_1_1){about_component_1=about_component_1_1}],execute:function(){AppComponent=function(){function AppComponent(){}return AppComponent=__decorate([core_5.Component({selector:"pw-app",providers:[router_1.ROUTER_PROVIDERS]}),core_5.View({directives:[header_component_1.HeaderComponent,router_1.ROUTER_DIRECTIVES],template:"\n		<pw-header></pw-header>\n		<main>\n			<router-outlet></router-outlet>\n		</main>\n		<footer>\n			Pathway™ - Powered by Angular 2. © 2016 Copyright rintoj (Rinto Jose).\n		</footer>\n	"}),router_1.RouteConfig([{path:"/log",name:"Projectlog",component:projectlog_component_1.ProjectlogComponent,useAsDefault:!0},{path:"/about",name:"About",component:about_component_1.AboutComponent}]),__metadata("design:paramtypes",[])],AppComponent)}(),exports_6("AppComponent",AppComponent)}}}),System.register("bootstrap",["angular2/platform/browser","angular2/core","app"],function(exports_7){"use strict";var browser_1,core_6,app_1;return{setters:[function(browser_1_1){browser_1=browser_1_1},function(core_6_1){core_6=core_6_1},function(app_1_1){app_1=app_1_1}],execute:function(){core_6.enableProdMode(),browser_1.bootstrap(app_1.AppComponent)}}}),System.register("shared/services/rest.service",["rxjs/add/operator/map","angular2/core","angular2/http"],function(exports_8){"use strict";var core_7,http_1,RestOptions,RestService;return{setters:[function(_1){},function(core_7_1){core_7=core_7_1},function(http_1_1){http_1=http_1_1}],execute:function(){RestOptions=function(_super){function RestOptions(){_super.call(this),this.url="//jsonplaceholder.typicode.com",this.headers.append("Content-Type","application/json")}return __extends(RestOptions,_super),RestOptions}(http_1.BaseRequestOptions),exports_8("RestOptions",RestOptions),RestService=function(){function RestService(http,restOptions){this.http=http,this.restOptions=restOptions}return RestService.prototype.create=function(path,body){return this.request(path,http_1.RequestMethod.Post,body)},RestService.prototype.read=function(path,search){return this.request(path,http_1.RequestMethod.Get,null,search)},RestService.prototype.update=function(path,body){return this.request(path,http_1.RequestMethod.Put,body)},RestService.prototype["delete"]=function(path){return this.request(path,http_1.RequestMethod.Delete)},RestService.prototype.request=function(path,method,body,search){var options=new http_1.RequestOptions(this.restOptions.merge({method:method,url:this.restOptions.url+path,body:JSON.stringify(body),search:this.serialize(search)}));return this.http.request(new http_1.Request(options))},RestService.prototype.serialize=function(obj){var str=[];for(var p in obj)obj.hasOwnProperty(p)&&str.push(encodeURIComponent(p)+"="+encodeURIComponent(obj[p]));return str.join("&")},RestService=__decorate([core_7.Injectable(),__metadata("design:paramtypes",[http_1.Http,RestOptions])],RestService)}(),exports_8("RestService",RestService)}}}),System.register("projectlog/projectlog.service",["rxjs/add/operator/map","angular2/core","shared/services/rest.service"],function(exports_9){"use strict";var core_8,rest_service_1,TodoService;return{setters:[function(_2){},function(core_8_1){core_8=core_8_1},function(rest_service_1_1){rest_service_1=rest_service_1_1}],execute:function(){TodoService=function(){function TodoService(rest){this.rest=rest,this.projectlog=[]}return TodoService.prototype.fetch=function(){var _this=this;this.rest.read("/projectlog",{userId:1}).map(function(res){return res.json()}).subscribe(function(projectlog){return _this.projectlog=projectlog})},TodoService.prototype.create=function(projectlog){this.projectlog.unshift(projectlog),this.rest.create("/projectlog",projectlog).subscribe(function(){return console.log("created!")})},TodoService.prototype.update=function(projectlog){this.rest.update("/projectlog/"+projectlog.id,projectlog).subscribe(function(){return console.log("updated!")})},TodoService.prototype["delete"]=function(projectlog){this.projectlog.splice(this.projectlog.indexOf(projectlog),1),this.rest["delete"]("/projectlog/"+projectlog.id).subscribe(function(){return console.log("deleted!")})},TodoService=__decorate([core_8.Injectable(),__metadata("design:paramtypes",[rest_service_1.RestService])],TodoService)}(),exports_9("TodoService",TodoService)}}}),System.register("todo/todo.interface",[],function(exports_10){"use strict";return{setters:[],execute:function(){}}}),System.register("todo/todo",[],function(exports_11){"use strict";var Todo;return{setters:[],execute:function(){Todo=function(){function Todo(title){this.id=Math.floor(11*Math.random()),this.title=title}return Todo}(),exports_11("Todo",Todo)}}}),System.register("todo/todo.service",["rxjs/add/operator/map","angular2/core","shared/services/rest.service"],function(exports_12){"use strict";var core_9,rest_service_2,TodoService;return{setters:[function(_3){},function(core_9_1){core_9=core_9_1},function(rest_service_2_1){rest_service_2=rest_service_2_1}],execute:function(){TodoService=function(){function TodoService(rest){this.rest=rest,this.todos=[]}return TodoService.prototype.fetch=function(){var _this=this;this.rest.read("/todos",{userId:1}).map(function(res){return res.json()}).subscribe(function(todos){return _this.todos=todos})},TodoService.prototype.create=function(todo){this.todos.unshift(todo),this.rest.create("/todos",todo).subscribe(function(){return console.log("created!")})},TodoService.prototype.update=function(todo){this.rest.update("/todos/"+todo.id,todo).subscribe(function(){return console.log("updated!")})},TodoService.prototype["delete"]=function(todo){this.todos.splice(this.todos.indexOf(todo),1),this.rest["delete"]("/todos/"+todo.id).subscribe(function(){return console.log("deleted!")})},TodoService=__decorate([core_9.Injectable(),__metadata("design:paramtypes",[rest_service_2.RestService])],TodoService)}(),exports_12("TodoService",TodoService)}}}),System.register("shared/directives/log-element.directive",["angular2/core"],function(exports_13){"use strict";var core_10,LogElement;return{setters:[function(core_10_1){core_10=core_10_1}],execute:function(){LogElement=function(){function LogElement(element){console.log("directive [logElement]",element)}return LogElement=__decorate([core_10.Directive({selector:"[logElement]"}),__metadata("design:paramtypes",[core_10.ElementRef])],LogElement)}(),exports_13("LogElement",LogElement)}}}),System.register("todo/todo-input.component",["angular2/core","angular2/common","todo/todo","todo/todo.service","shared/directives/log-element.directive"],function(exports_14){"use strict";var core_11,common_1,todo_1,todo_service_1,log_element_directive_1,TodoInputComponent;return{setters:[function(core_11_1){core_11=core_11_1},function(common_1_1){common_1=common_1_1},function(todo_1_1){todo_1=todo_1_1},function(todo_service_1_1){todo_service_1=todo_service_1_1},function(log_element_directive_1_1){log_element_directive_1=log_element_directive_1_1}],execute:function(){TodoInputComponent=function(){function TodoInputComponent(todoService){this.todoService=todoService,this.todo=new todo_1.Todo}return TodoInputComponent.prototype.submit=function(todo){todo.title&&(this.todoService.create(todo),this.todo=new todo_1.Todo)},TodoInputComponent=__decorate([core_11.Component({selector:"todo-input"}),core_11.View({directives:[common_1.FORM_DIRECTIVES,log_element_directive_1.LogElement],template:'\n		<form (ngSubmit)="submit(todo)">\n			<input\n				type="text"\n				class="form-control form-control-lg"\n				placeholder="new todo, press enter to save"\n				[(ngModel)]="todo.title"\n				logElement>\n		</form>\n	'}),__metadata("design:paramtypes",[todo_service_1.TodoService])],TodoInputComponent)}(),exports_14("TodoInputComponent",TodoInputComponent)}}}),System.register("shared/pipes/truncate.pipe",["angular2/core"],function(exports_15){"use strict";var core_12,TruncatePipe;return{setters:[function(core_12_1){core_12=core_12_1}],execute:function(){TruncatePipe=function(){function TruncatePipe(){}return TruncatePipe.prototype.transform=function(value,args){var length=parseInt(args[0]||"20",10),suffix=args[1]||"";return value.length<=length?value:value.substring(0,length)+suffix},TruncatePipe=__decorate([core_12.Pipe({name:"truncate"}),__metadata("design:paramtypes",[])],TruncatePipe)}(),exports_15("TruncatePipe",TruncatePipe)}}}),System.register("todo/todo-item.component",["angular2/common","angular2/core","shared/pipes/truncate.pipe"],function(exports_16){"use strict";var common_2,core_13,truncate_pipe_1,TodoItemComponent;return{setters:[function(common_2_1){common_2=common_2_1},function(core_13_1){core_13=core_13_1},function(truncate_pipe_1_1){truncate_pipe_1=truncate_pipe_1_1}],execute:function(){TodoItemComponent=function(){function TodoItemComponent(){this.editing=!1,this.deleteEmitter=new core_13.EventEmitter,this.updateEmitter=new core_13.EventEmitter}return TodoItemComponent.prototype["delete"]=function(todo){this.deleteEmitter.emit(todo)},TodoItemComponent.prototype.update=function(todo){this.updateEmitter.emit(todo)},TodoItemComponent.prototype.submit=function(todo){this.update(todo),this.toggleEditState()},TodoItemComponent.prototype.toggleEditState=function(){this.editing=!this.editing},__decorate([core_13.Input(),__metadata("design:type",Object)],TodoItemComponent.prototype,"todo",void 0),__decorate([core_13.Output("delete"),__metadata("design:type",core_13.EventEmitter)],TodoItemComponent.prototype,"deleteEmitter",void 0),__decorate([core_13.Output("update"),__metadata("design:type",core_13.EventEmitter)],TodoItemComponent.prototype,"updateEmitter",void 0),TodoItemComponent=__decorate([core_13.Component({selector:"todo-item"}),core_13.View({directives:[common_2.NgIf],pipes:[truncate_pipe_1.TruncatePipe],template:'\n		<div class="row todo-item" [ngClass]="{ completed: todo.completed }">\n			<div class="col-xs-1">\n				<input type="checkbox" class="filled-in" [(ngModel)]="todo.completed" (click)="update(todo)">\n			</div>\n\n			<div class="col-xs-8">\n				<span class="todo-item-text" *ngIf="!editing" (click)="toggleEditState()">\n					{{ todo.title | truncate:30:\'...\' }}\n				</span>\n\n				<form *ngIf="editing" (ngSubmit)="submit(todo)">\n					<input type="text" class="todo-item-input" [(ngModel)]="todo.title">\n				</form>\n			</div>\n\n			<div class="col-xs-3">\n				<button class="btn btn-default waves-effect waves-light" (click)="delete(todo)">Delete</button>\n			</div>\n		</div>\n	'}),__metadata("design:paramtypes",[])],TodoItemComponent)}(),exports_16("TodoItemComponent",TodoItemComponent)}}}),System.register("todo/todo-list.component",["angular2/common","angular2/core","todo/todo.service","todo/todo-item.component"],function(exports_17){"use strict";var common_3,core_14,todo_service_2,todo_item_component_1,TodoListComponent;return{setters:[function(common_3_1){common_3=common_3_1},function(core_14_1){core_14=core_14_1},function(todo_service_2_1){todo_service_2=todo_service_2_1},function(todo_item_component_1_1){todo_item_component_1=todo_item_component_1_1}],execute:function(){TodoListComponent=function(){function TodoListComponent(todoService){this.todoService=todoService,this.todoService.fetch()}return TodoListComponent.prototype["delete"]=function(todo){this.todoService["delete"](todo)},TodoListComponent.prototype.update=function(todo){this.todoService.update(todo)},TodoListComponent=__decorate([core_14.Component({selector:"todo-list"}),core_14.View({directives:[common_3.NgFor,todo_item_component_1.TodoItemComponent],template:'\n		<ul class="list-unstyled">\n			<li *ngFor="#todo of todoService.todos">\n				<todo-item\n					[todo]="todo"\n					(delete)="delete(todo)"\n					(update)="update(todo)">\n				</todo-item>\n			</li>\n		</ul>\n	'}),__metadata("design:paramtypes",[todo_service_2.TodoService])],TodoListComponent)}(),exports_17("TodoListComponent",TodoListComponent)}}}),System.register("todo/todo.component",["angular2/http","angular2/core","todo/todo.service","todo/todo-list.component","todo/todo-input.component","shared/services/rest.service"],function(exports_18){"use strict";var http_2,core_15,todo_service_3,todo_list_component_1,todo_input_component_1,rest_service_3,TodoComponent;return{setters:[function(http_2_1){http_2=http_2_1},function(core_15_1){core_15=core_15_1},function(todo_service_3_1){todo_service_3=todo_service_3_1},function(todo_list_component_1_1){todo_list_component_1=todo_list_component_1_1},function(todo_input_component_1_1){todo_input_component_1=todo_input_component_1_1},function(rest_service_3_1){rest_service_3=rest_service_3_1}],execute:function(){TodoComponent=function(){function TodoComponent(){this.header="Todo"}return TodoComponent=__decorate([core_15.Component({selector:"todo",providers:[http_2.HTTP_PROVIDERS,rest_service_3.RestOptions,rest_service_3.RestService,todo_service_3.TodoService]}),core_15.View({directives:[todo_input_component_1.TodoInputComponent,todo_list_component_1.TodoListComponent],template:'\n		<div class="row">\n			<div class="col-md-6 col-md-offset-3">\n				<p>For this example we\'re using\n					<a href="http://jsonplaceholder.typicode.com/" target="_blank">\n						JSONPlaceholder - Fake Online REST API for Testing and Prototyping\n					</a>.\n				</p>\n				<todo-input></todo-input>\n				<br>\n				<todo-list></todo-list>\n			</div>\n		</div>\n	'}),__metadata("design:paramtypes",[])],TodoComponent)}(),exports_18("TodoComponent",TodoComponent)}}});